#!/bin/bash
# Script: acl
# Description: CLI for ACL management
#
# - ACL of $source_nick must be > the acl to be set
# - ACL 'owner' can't be set
# - $owner can't be modified
#
# Subcommands:
# - chg	$nick	-	Changes ACL of $nick
# - del $nick	-	Deletes the ACL of $nick, thus deleting his account

case $1 in
	chg)
	shift
	username=$1
	newacl=$2
	oldacl=$(egrep ^$username\: < var/users | cut -d: -f3)

	if [[ -z $newacl ]] || [[ -z $oldacl ]] || [[ $username == $owner ]]; then
	answer "I don't think so, dude."
	return
	elif [[ $newacl == $oldacl ]]; then
		answer "That really wouldn't change much, dude."
		return
	elif ! acl_check $(egrep ^$username < var/users | cut -d: -f3); then
		answer "I'm not sure if you are allowed to do that, dude."
		return
	elif acl_check $newacl; then
		egrep -v ^$username < var/users > var/users.tmp
		egrep ^$username < var/users | sed "s/$oldacl/$newacl/" >> var/users.tmp && \
		mv var/users.tmp var/users
		answer "$username is now $newacl"
	else
		answer "Access-control my ass, dude!"
	fi
	;;
	del)
	shift
	username=$1
	if [[ -z $username ]]; then
		answer "Usage: acl del \$username"
		return
	elif [[ $username == $owner ]]; then
		answer "I wouldn't dare to delete my owner's account, dude."
		return
	elif ! egrep ^$username < var/users; then
		answer "Failed! User $username doesn't exist"
		return
	else
		egrep -v ^$username < var/users > var/users.tmp && \
		mv var/users.tmp var/users
		answer "Account $username deleted!"
	fi
	;;
esac
